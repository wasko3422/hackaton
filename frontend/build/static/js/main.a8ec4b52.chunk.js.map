{"version":3,"sources":["components/logo.svg","redux/reducer.js","redux/reducers/client.js","redux/reducers/cars.js","redux/reducers/requests.js","redux/reducers/completedOrders.js","components/Cars.jsx","components/Requests.jsx","components/CompletedOrders.jsx","components/Orders.jsx","pages/index.js","components/Header.jsx","components/Selects.jsx","components/CheckboxGroup.jsx","components/NewRequestForm.jsx","pages/new.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","combineReducers","client","state","id","type","cars","action","payload","requests","completedOrders","Meta","connect","clientId","dispatch","React","useEffect","axios","get","then","res","data","getCars","length","_","chunk","map","gutter","key","car_id","join","car","span","avatar","shape","size","src","car_logo_url","title","car_make","description","contract_id","style","margin","pending","pendingDot","Item","dot","fontSize","color","active","paragraph","rows","columns","dataIndex","width","defaultSortOrder","sorter","a","b","age","render","jobs","index","job","toUpperCase","onChange","pagination","filters","extra","console","log","getRequests","dataSource","marginRight","make","model","car_license_plate","date","moment","format","getCompletedOrders","scroll","x","Title","Orders","className","level","TabPane","Index","to","icon","defaultActiveKey","tabBarExtraContent","tab","logo","height","alt","CustomSelect","value","handleChange","setState","Option","this","options","props","showSearch","defaultActiveFirstOption","optionFilterProp","notFoundContent","showArrow","filterOption","input","option","children","toLowerCase","includes","Component","UserRemoteSelect","fetching","fetchUser","lastFetchId","fetchId","fetch","response","json","body","results","user","text","name","debounce","onSearch","d","CheckboxGroup","checkedList","indeterminate","checkAll","onCheckAllChange","e","target","checked","getFieldDecorator","borderBottom","setFieldsValue","Group","marginBottom","TextArea","formItemLayout","labelAlign","labelCol","sm","md","xl","wrapperCol","offset","lg","NewRequestForm","handleSubmit","preventDefault","validateFields","form","err","fieldsValue","values","onSubmit","label","required","rules","message","placeholder","addonAfter","justify","initialValue","buttonStyle","Button","htmlType","create","New","background","padding","minHeight","locale","Footer","Content","store","createStore","reducer","applyMiddleware","thunk","Boolean","window","location","hostname","match","ReactDOM","catch","error","finally","ruRU","path","exact","textAlign","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,kC,oTCM5BC,kBAAgB,CAC7BC,OCPK,WAKJ,IAJDC,EAIA,uDAJQ,CACNC,GAAI,GAMF,OAHJ,uDADS,IAEMC,KAEJF,GDAXG,KERK,WAA0C,IAA5BH,EAA2B,uDAAnB,KAAMI,EAAa,uDAAJ,GAC1C,OAAQA,EAAOF,MACb,IAAK,aACH,OAAOE,EAAOC,QAChB,QACE,OAAOL,IFIXM,SGTK,WAA8C,IAA5BN,EAA2B,uDAAnB,KAAMI,EAAa,uDAAJ,GAC9C,OAAQA,EAAOF,MACb,IAAK,iBACH,OAAOE,EAAOC,QAChB,QACE,OAAOL,IHKXO,gBIVK,WAAqD,IAA5BP,EAA2B,uDAAnB,KAAMI,EAAa,uDAAJ,GACrD,OAAQA,EAAOF,MACb,IAAK,yBACH,OAAOE,EAAOC,QAChB,QACE,OAAOL,M,yNCaLQ,E,IAAAA,KAaR,IA+EeC,eAAQ,SAACT,GAAD,MAAY,CACjCG,KAAMH,EAAMG,KACZO,SAAUV,EAAMD,OAAOE,MAFVQ,EA/EF,SAAC,GAAkC,IAAhCN,EAA+B,EAA/BA,KAAMQ,EAAyB,EAAzBA,SAAUD,EAAe,EAAfA,SAK9B,OAJAE,IAAMC,WAAU,WACdF,EAbJ,SAAiBD,GACf,OAAO,SAACC,GACNG,IAAMC,IAAN,8BAAiCL,IAAYM,MAAK,SAACC,GAAD,OAChDN,EAAS,CACPT,KAAM,aACNG,QAASY,EAAIC,MAAQ,SAQhBC,CAAQT,MAChB,CAACA,IAECP,EAYAA,EAAKiB,OAWR,oCACGC,IAAEC,MAAMnB,EAAM,GAAGoB,KAAI,SAACD,GACrB,OACE,uBAAKE,OAAQ,GAAIC,IAAKH,EAAMC,KAAI,qBAAGG,UAAqBC,KAAK,MAC1DL,EAAMC,KAAI,SAACK,GACV,OACE,uBAAKC,KAAM,EAAGJ,IAAKG,EAAIF,QACrB,2BACE,kBAAClB,EAAD,CACEsB,OACE,uBACEC,MAAM,SACNC,KAAK,QACLC,IAAKL,EAAIM,eAGbC,MAAOP,EAAIQ,SACXC,YAAW,2DAAcT,EAAIU,eAE/B,uBAASC,MAAO,CAAEC,OAAQ,WAA1B,+IAGA,uBAAUC,QAAQ,IAAIC,WAAY,uBAAMxC,KAAK,UAC3C,sBAAUyC,KAAV,CACEC,IACE,uBACE1C,KAAK,iBACLqC,MAAO,CAAEM,SAAU,UAGvBC,MAAM,OAEN,gGACA,uFAEF,sBAAUH,KAAV,KACE,gGACA,kGA9ClB,uBAAKnB,OAAQ,IACX,uBAAKK,KAAM,IACT,8BAdJ,uBAAKL,OAAQ,IACX,uBAAKK,KAAM,GACT,2BACE,uBAAUC,QAAM,EAACiB,QAAM,EAACC,UAAW,CAAEC,KAAM,W,sDCjCjDC,EAAU,CACd,CACEf,MAAO,KACPgB,UAAW,WACXC,MAAO,KAET,CACEjB,MAAO,+DACPgB,UAAW,wBACXE,iBAAkB,UAClBC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,IAAMD,EAAEC,MAE9B,CACEtB,MAAO,uCACPgB,UAAW,iBAEb,CACEhB,MAAO,kFACPgB,UAAW,aACXO,OAAQ,SAACC,EAAMtC,EAAGuC,GAChB,OAAKD,EAAKvC,OAIR,0BAAMK,IAAKmC,GACRD,EAAKpC,KAAI,SAACsC,GACT,OAAO,uBAAKpC,IAAKoC,GAAMA,EAAIC,mBALxB,sCAaf,SAASC,EAASC,EAAYC,EAASX,EAAQY,GAC7CC,QAAQC,IAAI,SAAUJ,EAAYC,EAASX,EAAQY,GAcrD,IAqBezD,eAAQ,SAACT,GAAD,MAAY,CACjCM,SAAUN,EAAMM,SAChBI,SAAUV,EAAMD,OAAOE,MAFVQ,EArBE,SAAC,GAAsC,IAApCH,EAAmC,EAAnCA,SAAUK,EAAyB,EAAzBA,SAAUD,EAAe,EAAfA,SAOtC,OANAE,IAAMC,WAAU,WACdF,EAbJ,SAAqBD,GACnB,OAAO,SAACC,GACNG,IAAMC,IAAN,gCAAmCL,IAAYM,MAAK,SAACC,GAAD,OAClDN,EAAS,CACPT,KAAM,iBACNG,QAASY,EAAIC,MAAQ,SAQhBmD,CAAY3D,MACpB,CAACA,IAEJyD,QAAQC,IAAI,WAAY9D,GAGtB,uBACE4C,QAASA,EACToB,WAAYhE,EACZyD,SAAUA,EACVC,WAAY,CACVzB,MAAO,CACLgC,YAAa,U,iBC9DjBrB,EAAU,CACd,CACEf,MAAO,KACPgB,UAAW,cACXC,MAAO,KAET,CACEjB,MAAO,+DACPgB,UAAW,MACXE,iBAAkB,UAClBK,OAAQ,WAAqCrC,EAAGuC,GAAW,IAAhDY,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,kBACtB,MAAM,GAAN,OAAUF,EAAKV,cAAf,YAAgCW,EAAhC,cAA2CC,EAAkBZ,gBAE/DR,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,IAAMD,EAAEC,MAE9B,CACEtB,MAAO,uCACPgB,UAAW,oBAEb,CACEhB,MAAO,6HACPgB,UAAW,gBACXE,iBAAkB,UAClBC,OAAQ,SAACC,EAAGC,GACV,OAAID,EAAIC,GACE,EAEND,EAAIC,EACC,EAGF,GAETE,OAAQ,SAACiB,GACP,OAAOC,IAAOD,GAAME,OAAO,gBAG/B,CACE1C,MAAO,iCACPgB,UAAW,yBAIf,SAASY,EAASC,EAAYC,EAASX,EAAQY,GAC7CC,QAAQC,IAAI,SAAUJ,EAAYC,EAASX,EAAQY,GAcrD,IAsBezD,eAAQ,SAACT,GAAD,MAAY,CACjCO,gBAAiBP,EAAMO,gBACvBG,SAAUV,EAAMD,OAAOE,MAFVQ,EAtBS,SAAC,GAA6C,IAA3CF,EAA0C,EAA1CA,gBAAiBI,EAAyB,EAAzBA,SAAUD,EAAe,EAAfA,SAOpD,OANAE,IAAMC,WAAU,WACdF,EAbJ,SAA4BD,GAC1B,OAAO,SAACC,GACNG,IAAMC,IAAN,mCAAsCL,IAAYM,MAAK,SAACC,GAAD,OACrDN,EAAS,CACPT,KAAM,yBACNG,QAASY,EAAIC,MAAQ,SAQhB4D,CAAmBpE,MAC3B,CAACA,IAEJyD,QAAQC,IAAI,kBAAmB7D,GAG7B,uBACEwE,OAAQ,CAAEC,EAAG,KACb9B,QAASA,EACToB,WAAY/D,EACZwD,SAAUA,EACVC,WAAY,CACVzB,MAAO,CACLgC,YAAa,UC5EfU,G,WAAAA,OAEKC,EAAS,kBACpB,oCACE,yBAAKC,UAAU,gBACb,kBAACF,EAAD,CAAOG,MAAO,EAAGD,UAAU,gBAA3B,wCAGA,kBAAC,EAAD,OAEF,yBAAKA,UAAU,gBACb,kBAACF,EAAD,CAAOG,MAAO,EAAGD,UAAU,gBAA3B,mFAGA,kBAAC,EAAD,SCbEE,G,WAAAA,SAsDOC,EApDD,kBACZ,oCACE,yBAAKH,UAAU,kBACb,kBAAC,IAAD,CAAMI,GAAG,QACP,uBAAQrF,KAAK,UAAUsF,KAAK,cAAczD,MAAM,QAAQC,KAAK,SAA7D,yEAKJ,uBACEyD,iBAAiB,IACjBzD,KAAK,QACL0D,mBACE,yBAAKP,UAAU,gBACb,kBAAC,IAAD,CAAMI,GAAG,QACP,uBAAQrF,KAAK,UAAUsF,KAAK,cAAcxD,KAAK,SAA/C,0EAON,kBAACqD,EAAD,CACEM,IACE,yBAAKR,UAAU,OACb,uBAAMjF,KAAK,QADb,gEAKFuB,IAAI,KAEJ,yBAAK0D,UAAU,eACb,kBAAC,EAAD,QAGJ,kBAACE,EAAD,CACEM,IACE,yBAAKR,UAAU,OACb,uBAAMjF,KAAK,SADb,wCAKFuB,IAAI,KAEJ,yBAAK0D,UAAU,eACb,kBAAC,EAAD,W,oCCjCK1E,G,OAAAA,aAAQ,SAACT,GAAD,MAAY,CAAED,OAAQC,EAAMD,UAApCU,EAdA,SAAC,GAAgB,IAAdV,EAAa,EAAbA,OAEhB,OADAoE,QAAQC,IAAIrE,GAEV,uBACEoF,UAAU,SACVhD,MACE,kBAAC,IAAD,CAAMoD,GAAG,KACP,yBAAKtD,IAAK2D,IAAMC,OAAQ,GAAIC,IAAI,e,uLCT7BC,GAAb,8MACE/F,MAAQ,CACNgG,MAAO,IAFX,EAKEC,aAAe,SAACD,GACd,EAAKE,SAAS,CACZF,WAPN,0EAWY,IACAG,EADD,KACCA,OACAH,EAAUI,KAAKpG,MAAfgG,MACAK,EAAYD,KAAKE,MAAjBD,QACR,OACE,sCACEE,YAAU,EACVP,MAAOA,EACPQ,0BAA0B,EAC1BC,iBAAiB,WACjB1C,SAAUqC,KAAKH,aACfS,gBAAiB,KACjBC,WAAW,EACXC,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOR,MAAMS,SAASC,cAAcC,SAASJ,EAAMG,iBAEjDZ,KAAKE,OAERD,EAAQ9E,KAAI,SAACyE,GAAD,OACX,kBAACG,EAAD,CAAQ1E,IAAKuE,EAAOA,MAAOA,GACxBA,WA/Bb,GAAkCkB,aAuC1Bf,G,KAAAA,OAEKgB,GAAb,YACE,WAAYb,GAAQ,IAAD,+BACjB,8CAAMA,KAKRtG,MAAQ,CACNkB,KAAM,GACN8E,MAAO,GACPoB,UAAU,GATO,EAYnBC,UAAY,SAACrB,GACX,EAAKsB,aAAe,EACpB,IAAMC,EAAU,EAAKD,YACrB,EAAKpB,SAAS,CAAEhF,KAAM,GAAIkG,UAAU,IAEpCI,MAAM,uCAAD,OAAwCxB,IAC1ChF,MAAK,SAACyG,GAAD,OAAcA,EAASC,UAC5B1G,MAAK,SAAC2G,GACL,GAAIJ,IAAY,EAAKD,YAArB,CAIA,IAAMpG,EAAOyG,EAAKC,QAAQrG,KAAI,SAACsG,GAAD,MAAW,CACvCC,KAAK,GAAD,OAAKD,EAAKE,MACd/B,MAAO6B,EAAKE,SAEd,EAAK7B,SAAS,CAAEhF,OAAMkG,UAAU,SA5BnB,EAgCnBnB,aAAe,SAACD,GACd,EAAKE,SAAS,CACZF,QACA9E,KAAM,GACNkG,UAAU,KAlCZ,EAAKE,YAAc,EACnB,EAAKD,UAAYW,KAAS,EAAKX,UAAW,KAHzB,EADrB,wEAyCY,IAAD,EAC2BjB,KAAKpG,MAA/BoH,EADD,EACCA,SAAUlG,EADX,EACWA,KAAM8E,EADjB,EACiBA,MACxB,OACE,sCACEO,YAAU,EACVP,MAAOA,EACPU,gBAAiBU,EAAW,wBAAMpF,KAAK,UAAa,KACpD4E,cAAc,EACdD,WAAW,EACXsB,SAAU7B,KAAKiB,UACftD,SAAUqC,KAAKH,aACf1D,MAAO,CAAEa,MAAO,SACZgD,KAAKE,OAERpF,EAAKK,KAAI,SAAC2G,GAAD,OACR,kBAAC,GAAD,CAAQzG,IAAKyG,EAAElC,OAAQkC,EAAEJ,cAxDnC,GAAsCZ,a,kBC3CzBiB,GAAb,8MACEnI,MAAQ,CACNoI,YAAa,GACbC,eAAe,EACfC,UAAU,GAJd,EAOEvE,SAAW,SAACqE,GAAiB,IACnB/B,EAAY,EAAKC,MAAjBD,QACR,EAAKH,SAAS,CACZkC,cACAC,gBACID,EAAYhH,QAAUgH,EAAYhH,OAASiF,EAAQjF,OACvDkH,SAAUF,EAAYhH,SAAWiF,EAAQjF,UAb/C,EAiBEmH,iBAAmB,SAACC,GAAO,IACjBnC,EAAY,EAAKC,MAAjBD,QAER,EAAKH,SAAS,CACZkC,YAAaI,EAAEC,OAAOC,QAAUrC,EAAU,GAC1CgC,eAAe,EACfC,SAAUE,EAAEC,OAAOC,WAvBzB,0EA2BY,IAAD,EAC6BtC,KAAKE,MAAjCqC,EADD,EACCA,kBAAmBZ,EADpB,EACoBA,KAC3B,OACE,6BACG3B,KAAKE,MAAMgC,UACV,yBAAK/F,MAAO,CAAEqG,aAAc,sBAC1B,wBACEP,cAAejC,KAAKpG,MAAMqI,cAC1BtE,SAAUqC,KAAKmC,iBACfG,QAAStC,KAAKpG,MAAMsI,UAHtB,iEAOA,8BAGHK,EAAkBZ,EAAM,CAAEc,eAAgBzC,KAAKpG,MAAMoI,aAArDO,CACC,uBAAUG,MAAV,CAAgB/E,SAAUqC,KAAKrC,UAC5BqC,KAAKE,MAAMD,QAAQ9E,KAAI,SAACuF,GAAD,OACtB,uBAAKrF,IAAKqF,EAAQvE,MAAO,CAAEwG,aAAc,UACvC,wBAAU/C,MAAOc,EAAQvE,MAAO,CAAEM,SAAU,SACzCiE,cAhDnB,GAAmClG,IAAMsG,WCGjC8B,G,KAAAA,SAEFC,GAAiB,CACrBC,WAAY,OACZC,SAAU,CACRC,GAAI,CAAEvH,KAAM,IACZwH,GAAI,CAAExH,KAAM,IACZyH,GAAI,CAAEzH,KAAM,IAEd0H,WAAY,CACVH,GAAI,CAAEvH,KAAM,IACZwH,GAAI,CAAExH,KAAM,GAAI2H,OAAQ,GACxBC,GAAI,CAAE5H,KAAM,KAIV6H,G,8MACJC,aAAe,SAACnB,GACdA,EAAEoB,kBAGFC,EAF2B,EAAKvD,MAAMwD,KAA9BD,iBAEO,SAACE,EAAKC,GACnB,IAAID,EAAJ,CAGA,IAAME,EAAM,eACPD,EADO,CAEVrF,KAAMqF,EAAW,KAASnF,OAAO,gBAEnCV,QAAQC,IAAI,4BAA6B6F,Q,0EAInC,IACAtB,EAAsBvC,KAAKE,MAAMwD,KAAjCnB,kBACR,OACE,uCAAUM,GAAV,CAA0BiB,SAAU9D,KAAKuD,eACvC,sBAAMhH,KAAN,CAAWwH,MAAM,6JAAgCC,UAAQ,GACtDzB,EAAkB,YAAa,CAC9B0B,MAAO,CACL,CACED,UAAU,EACVE,QAAS,4IAJd3B,CAQC,kBAAC,GAAD,CACE4B,YAAY,SACZlE,QAAS,CACP,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEFrE,KAAK,YAIX,sBAAMW,KAAN,CAAWwH,MAAM,2JAA8BC,UAAQ,GACpDzB,EAAkB,OAAQ,CACzB0B,MAAO,CACL,CACED,UAAU,EACVE,QAAS,sIAJd3B,CAQC,kBAAC,GAAD,CACE4B,YAAY,iCACZlE,QAAS,CAAC,uCAAU,kCACpBrE,KAAK,YAIX,sBAAMW,KAAN,CAAWwH,MAAM,2LACdxB,EAAkB,cAAlBA,CACC,wBACEzI,KAAK,SACLqK,YAAY,uCACZC,WAAW,eACXxI,KAAK,YAIX,sBAAMW,KAAN,CAAWwH,MAAM,gQACf,2BACE,kBAAC,GAAD,CACExB,kBAAmBA,EACnBZ,KAAK,WACL1B,QAAS,CACP,4EACA,uKACA,oEAIN,2BACGsC,EAAkB,gBAAlBA,CACC,kBAACK,GAAD,CACEuB,YAAY,4EACZtH,KAAM,EACNV,MAAO,CAAEM,SAAU,aAK3B,sBAAMF,KAAN,CAAWwH,MAAM,uOACf,uBAAKjK,KAAK,OAAOuK,QAAQ,iBACvB,sBAAM9H,KAAN,KACGgG,EAAkB,OAAlBA,CACC,uBACE3G,KAAM,QACNuI,YAAY,4EACZhI,MAAO,CAAEgC,YAAa,OAAQwE,aAAc,YAIlD,sBAAMpG,KAAN,KACGgG,EAAkB,UAAW,CAC5B+B,aAAc,MADf/B,CAGC,sBAAOG,MAAP,CAAa6B,YAAY,QAAQ3I,KAAK,SACpC,sBAAO4I,OAAP,CAAc5E,MAAM,MAApB,sBACA,sBAAO4E,OAAP,CAAc5E,MAAM,MAApB,6CAMV,uBAAQ9F,KAAK,UAAU2K,SAAS,SAAS7I,KAAK,SAA9C,oG,GArHqBkF,aA4Hd,OAAK4D,OAAO,CAAE/C,KAAM,WAApB,CAAiC2B,IC9IxCzE,G,IAAAA,MAiBO8F,GAfH,WACV,OACE,yBACExI,MAAO,CACLyI,WAAY,OACZC,QAAS,GACTC,UAAW,MAGb,kBAAC,GAAD,4EACA,kBAAC,GAAD,Q,mCCENtG,IAAOuG,OAAO,M,IAENC,G,IAAAA,OAAQC,G,IAAAA,QAEVC,GAAQC,YAAYC,EAASC,YAAgBC,MCV/BC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAAStI,OAAO,mBFkBD,WAeb,OAbA5C,IACGC,IAAI,eACJC,MAAK,SAASyG,GAEbtD,QAAQC,IAAIqD,MAEbwE,OAAM,SAASC,GAEd/H,QAAQC,IAAI8H,MAEbC,SAAQ,eAIT,uBAAgBhB,OAAQiB,MACtB,kBAAC,IAAD,CAAUd,MAAOA,IACf,kBAAC,IAAD,KACE,uBAAQnG,UAAU,UAChB,kBAAC,EAAD,MACA,kBAACkG,GAAD,CAASlG,UAAU,WACjB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOkH,KAAK,QACV,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOA,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,SAIN,kBAAClB,GAAD,CAAQ7I,MAAO,CAAEgK,UAAW,WAA5B,gEEjDI,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5L,MAAK,SAAA6L,GACjCA,EAAaC,kB","file":"static/js/main.a8ec4b52.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f9ed6839.svg\";","import { combineReducers } from 'redux';\nimport { client } from './reducers/client';\nimport { cars } from './reducers/cars';\nimport { requests } from './reducers/requests';\nimport { completedOrders } from './reducers/completedOrders';\n\nexport default combineReducers({\n  client,\n  cars,\n  requests,\n  completedOrders,\n});\n","export function client(\n  state = {\n    id: 1,\n  },\n  action = {}\n) {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n","export function cars(state = null, action = {}) {\n  switch (action.type) {\n    case 'FETCH_CARS':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","export function requests(state = null, action = {}) {\n  switch (action.type) {\n    case 'FETCH_REQUESTS':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","export function completedOrders(state = null, action = {}) {\n  switch (action.type) {\n    case 'FETCH_COMPLETED_ORDERS':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport {\n  Card,\n  Col,\n  Row,\n  Avatar,\n  Divider,\n  Skeleton,\n  Empty,\n  Timeline,\n  Icon,\n} from 'antd';\n\nimport { connect } from 'react-redux';\nconst { Meta } = Card;\n\nfunction getCars(clientId) {\n  return (dispatch) => {\n    axios.get(`/get-cars?client_id=${clientId}`).then((res) =>\n      dispatch({\n        type: 'FETCH_CARS',\n        payload: res.data || [],\n      })\n    );\n  };\n}\n\nconst Cars = ({ cars, dispatch, clientId }) => {\n  React.useEffect(() => {\n    dispatch(getCars(clientId));\n  }, [clientId]);\n\n  if (!cars) {\n    return (\n      <Row gutter={16}>\n        <Col span={8}>\n          <Card>\n            <Skeleton avatar active paragraph={{ rows: 4 }} />\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n\n  if (!cars.length) {\n    return (\n      <Row gutter={16}>\n        <Col span={24}>\n          <Empty />\n        </Col>\n      </Row>\n    );\n  }\n\n  return (\n    <>\n      {_.chunk(cars, 3).map((chunk) => {\n        return (\n          <Row gutter={16} key={chunk.map(({ car_id }) => car_id).join('-')}>\n            {chunk.map((car) => {\n              return (\n                <Col span={8} key={car.car_id}>\n                  <Card>\n                    <Meta\n                      avatar={\n                        <Avatar\n                          shape=\"square\"\n                          size=\"large\"\n                          src={car.car_logo_url}\n                        />\n                      }\n                      title={car.car_make}\n                      description={`Контракт ${car.contract_id}`}\n                    />\n                    <Divider style={{ margin: '40px 0' }}>\n                      Техническое обслуживание\n                    </Divider>\n                    <Timeline pending=\" \" pendingDot={<Icon type=\"tool\" />}>\n                      <Timeline.Item\n                        dot={\n                          <Icon\n                            type=\"clock-circle-o\"\n                            style={{ fontSize: '16px' }}\n                          />\n                        }\n                        color=\"red\"\n                      >\n                        <p>Следующее 2015-09-01</p>\n                        <p>Пробег 20000 км</p>\n                      </Timeline.Item>\n                      <Timeline.Item>\n                        <p>Последнее 2015-09-01</p>\n                        <p>Пробег 10000 км</p>\n                      </Timeline.Item>\n                    </Timeline>\n                  </Card>\n                </Col>\n              );\n            })}\n          </Row>\n        );\n      })}\n    </>\n  );\n};\n\nexport default connect((state) => ({\n  cars: state.cars,\n  clientId: state.client.id,\n}))(Cars);\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nimport { Table, Tag } from 'antd';\n\nconst columns = [\n  {\n    title: 'ID',\n    dataIndex: 'order_id',\n    width: 100,\n  },\n  {\n    title: 'Автомобиль',\n    dataIndex: 'car.car_license_plate',\n    defaultSortOrder: 'descend',\n    sorter: (a, b) => a.age - b.age,\n  },\n  {\n    title: 'Пробег',\n    dataIndex: 'order.mileage',\n  },\n  {\n    title: 'Перечень работ',\n    dataIndex: 'order.jobs',\n    render: (jobs, _, index) => {\n      if (!jobs.length) {\n        return <span>-</span>;\n      }\n      return (\n        <span key={index}>\n          {jobs.map((job) => {\n            return <Tag key={job}>{job.toUpperCase()}</Tag>;\n          })}\n        </span>\n      );\n    },\n  },\n];\n\nfunction onChange(pagination, filters, sorter, extra) {\n  console.log('params', pagination, filters, sorter, extra);\n}\n\nfunction getRequests(clientId) {\n  return (dispatch) => {\n    axios.get(`/get-orders?client_id=${clientId}`).then((res) =>\n      dispatch({\n        type: 'FETCH_REQUESTS',\n        payload: res.data || [],\n      })\n    );\n  };\n}\n\nconst Requests = ({ requests, dispatch, clientId }) => {\n  React.useEffect(() => {\n    dispatch(getRequests(clientId));\n  }, [clientId]);\n\n  console.log('requests', requests);\n\n  return (\n    <Table\n      columns={columns}\n      dataSource={requests}\n      onChange={onChange}\n      pagination={{\n        style: {\n          marginRight: 15,\n        },\n      }}\n    />\n  );\n};\n\nexport default connect((state) => ({\n  requests: state.requests,\n  clientId: state.client.id,\n}))(Requests);\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport { Table, Tag } from 'antd';\n\nconst columns = [\n  {\n    title: 'ID',\n    dataIndex: 'job_done_id',\n    width: 100,\n  },\n  {\n    title: 'Автомобиль',\n    dataIndex: 'car',\n    defaultSortOrder: 'descend',\n    render: ({ make, model, car_license_plate }, _, index) => {\n      return `${make.toUpperCase()} ${model} / ${car_license_plate.toUpperCase()}`;\n    },\n    sorter: (a, b) => a.age - b.age,\n  },\n  {\n    title: 'Пробег',\n    dataIndex: 'job_done.mileage',\n  },\n  {\n    title: 'Дата выполнения заказа',\n    dataIndex: 'job_done.date',\n    defaultSortOrder: 'descend',\n    sorter: (a, b) => {\n      if (a < b) {\n        return -1;\n      }\n      if (a > b) {\n        return 1;\n      }\n\n      return 0;\n    },\n    render: (date) => {\n      return moment(date).format('DD.MM.YYYY');\n    },\n  },\n  {\n    title: 'Дилер',\n    dataIndex: 'job_done.dealer_name',\n  },\n];\n\nfunction onChange(pagination, filters, sorter, extra) {\n  console.log('params', pagination, filters, sorter, extra);\n}\n\nfunction getCompletedOrders(clientId) {\n  return (dispatch) => {\n    axios.get(`/get-jobs-done?client_id=${clientId}`).then((res) =>\n      dispatch({\n        type: 'FETCH_COMPLETED_ORDERS',\n        payload: res.data || [],\n      })\n    );\n  };\n}\n\nconst CompletedOrders = ({ completedOrders, dispatch, clientId }) => {\n  React.useEffect(() => {\n    dispatch(getCompletedOrders(clientId));\n  }, [clientId]);\n\n  console.log('completedOrders', completedOrders);\n\n  return (\n    <Table\n      scroll={{ x: 992 }}\n      columns={columns}\n      dataSource={completedOrders}\n      onChange={onChange}\n      pagination={{\n        style: {\n          marginRight: 15,\n        },\n      }}\n    />\n  );\n};\n\nexport default connect((state) => ({\n  completedOrders: state.completedOrders,\n  clientId: state.client.id,\n}))(CompletedOrders);\n","import React from 'react';\nimport { Typography } from 'antd';\nimport Requests from './Requests';\nimport CompletedOrders from './CompletedOrders';\nimport './Orders.css';\n\nconst { Title } = Typography;\n\nexport const Orders = () => (\n  <>\n    <div className=\"orders-block\">\n      <Title level={3} className=\"orders-title\">\n        Заявки\n      </Title>\n      <Requests />\n    </div>\n    <div className=\"orders-block\">\n      <Title level={3} className=\"orders-title\">\n        Выполненное ТО\n      </Title>\n      <CompletedOrders />\n    </div>\n  </>\n);\n","import React from 'react';\nimport { Button, Tabs, Icon } from 'antd';\nimport { Link } from 'react-router-dom';\nimport Cars from '../components/Cars';\nimport { Orders } from '../components/Orders';\nimport './index.css';\n\nconst { TabPane } = Tabs;\n\nconst Index = () => (\n  <>\n    <div className=\"new-item-block\">\n      <Link to=\"/new\">\n        <Button type=\"primary\" icon=\"plus-circle\" shape=\"round\" size=\"large\">\n          Новая заявка\n        </Button>\n      </Link>\n    </div>\n    <Tabs\n      defaultActiveKey=\"1\"\n      size=\"large\"\n      tabBarExtraContent={\n        <div className=\"new-item-tab\">\n          <Link to=\"/new\">\n            <Button type=\"primary\" icon=\"plus-circle\" size=\"large\">\n              Новая заявка\n            </Button>\n          </Link>\n        </div>\n      }\n    >\n      <TabPane\n        tab={\n          <div className=\"tab\">\n            <Icon type=\"car\" />\n            Автомобили\n          </div>\n        }\n        key=\"1\"\n      >\n        <div className=\"tab-content\">\n          <Cars />\n        </div>\n      </TabPane>\n      <TabPane\n        tab={\n          <div className=\"tab\">\n            <Icon type=\"bars\" />\n            Заказы\n          </div>\n        }\n        key=\"2\"\n      >\n        <div className=\"tab-content\">\n          <Orders />\n        </div>\n      </TabPane>\n    </Tabs>\n  </>\n);\n\nexport default Index;\n","import React from 'react';\nimport { PageHeader } from 'antd';\nimport logo from './logo.svg';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './Header.css';\n\nconst Header = ({ client }) => {\n  console.log(client);\n  return (\n    <PageHeader\n      className=\"header\"\n      title={\n        <Link to=\"/\">\n          <img src={logo} height={40} alt=\"ALD\" />\n        </Link>\n      }\n    />\n  );\n};\n\nexport default connect((state) => ({ client: state.client }))(Header);\n","import React, { Component } from 'react';\n\nimport { Select, Spin } from 'antd';\nimport debounce from 'lodash.debounce';\n\nexport class CustomSelect extends Component {\n  state = {\n    value: [],\n  };\n\n  handleChange = (value) => {\n    this.setState({\n      value,\n    });\n  };\n\n  render() {\n    const { Option } = Select;\n    const { value } = this.state;\n    const { options } = this.props;\n    return (\n      <Select\n        showSearch\n        value={value}\n        defaultActiveFirstOption={false}\n        optionFilterProp=\"children\"\n        onChange={this.handleChange}\n        notFoundContent={null}\n        showArrow={false}\n        filterOption={(input, option) =>\n          option.props.children.toLowerCase().includes(input.toLowerCase())\n        }\n        {...this.props}\n      >\n        {options.map((value) => (\n          <Option key={value} value={value}>\n            {value}\n          </Option>\n        ))}\n      </Select>\n    );\n  }\n}\n\nconst { Option } = Select;\n\nexport class UserRemoteSelect extends Component {\n  constructor(props) {\n    super(props);\n    this.lastFetchId = 0;\n    this.fetchUser = debounce(this.fetchUser, 800);\n  }\n\n  state = {\n    data: [],\n    value: [],\n    fetching: false,\n  };\n\n  fetchUser = (value) => {\n    this.lastFetchId += 1;\n    const fetchId = this.lastFetchId;\n    this.setState({ data: [], fetching: true });\n    // TODO: заменить на апишку из пропсовы\n    fetch(`https://swapi.co/api/people/?search=${value}`)\n      .then((response) => response.json())\n      .then((body) => {\n        if (fetchId !== this.lastFetchId) {\n          // for fetch callback order\n          return;\n        }\n        const data = body.results.map((user) => ({\n          text: `${user.name}`,\n          value: user.name,\n        }));\n        this.setState({ data, fetching: false });\n      });\n  };\n\n  handleChange = (value) => {\n    this.setState({\n      value,\n      data: [],\n      fetching: false,\n    });\n  };\n\n  render() {\n    const { fetching, data, value } = this.state;\n    return (\n      <Select\n        showSearch\n        value={value}\n        notFoundContent={fetching ? <Spin size=\"small\" /> : null}\n        filterOption={false}\n        showArrow={false}\n        onSearch={this.fetchUser}\n        onChange={this.handleChange}\n        style={{ width: '100%' }}\n        {...this.props}\n      >\n        {data.map((d) => (\n          <Option key={d.value}>{d.text}</Option>\n        ))}\n      </Select>\n    );\n  }\n}\n","import React from 'react';\nimport { Checkbox, Row } from 'antd';\n\nexport class CheckboxGroup extends React.Component {\n  state = {\n    checkedList: [],\n    indeterminate: true,\n    checkAll: false,\n  };\n\n  onChange = (checkedList) => {\n    const { options } = this.props;\n    this.setState({\n      checkedList,\n      indeterminate:\n        !!checkedList.length && checkedList.length < options.length,\n      checkAll: checkedList.length === options.length,\n    });\n  };\n\n  onCheckAllChange = (e) => {\n    const { options } = this.props;\n\n    this.setState({\n      checkedList: e.target.checked ? options : [],\n      indeterminate: false,\n      checkAll: e.target.checked,\n    });\n  };\n\n  render() {\n    const { getFieldDecorator, name } = this.props;\n    return (\n      <div>\n        {this.props.checkAll && (\n          <div style={{ borderBottom: '1px solid #E9E9E9' }}>\n            <Checkbox\n              indeterminate={this.state.indeterminate}\n              onChange={this.onCheckAllChange}\n              checked={this.state.checkAll}\n            >\n              Выбрать все\n            </Checkbox>\n            <br />\n          </div>\n        )}\n        {getFieldDecorator(name, { setFieldsValue: this.state.checkedList })(\n          <Checkbox.Group onChange={this.onChange}>\n            {this.props.options.map((option) => (\n              <Row key={option} style={{ marginBottom: '0.5em' }}>\n                <Checkbox value={option} style={{ fontSize: '16px' }}>\n                  {option}\n                </Checkbox>\n              </Row>\n            ))}\n          </Checkbox.Group>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Input, DatePicker, Radio, Button, Row } from 'antd';\n\nimport { CustomSelect, UserRemoteSelect } from '../components/Selects';\nimport { CheckboxGroup } from '../components/CheckboxGroup';\n\nconst { TextArea } = Input;\n\nconst formItemLayout = {\n  labelAlign: 'left',\n  labelCol: {\n    sm: { span: 24 },\n    md: { span: 12 },\n    xl: { span: 8 },\n  },\n  wrapperCol: {\n    sm: { span: 24 },\n    md: { span: 11, offset: 1 },\n    lg: { span: 8 },\n  },\n};\n\nclass NewRequestForm extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { validateFields } = this.props.form;\n\n    validateFields((err, fieldsValue) => {\n      if (err) {\n        return;\n      }\n      const values = {\n        ...fieldsValue,\n        date: fieldsValue['date'].format('YYYY-MM-DD'),\n      };\n      console.log('Received values of form: ', values);\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n        <Form.Item label=\"Укажите гос. номер автомобиля\" required>\n          {getFieldDecorator('carNumber', {\n            rules: [\n              {\n                required: true,\n                message: 'Введите номер автомобиля',\n              },\n            ],\n          })(\n            <CustomSelect\n              placeholder=\"x000xx\"\n              options={[\n                'A000AA',\n                'B000BB',\n                'C345CC',\n                'X304YH',\n                'B777OP',\n                'B302PY',\n                'C567PY',\n                'O111BH',\n              ]}\n              size=\"large\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"Выберите город обслуживания\" required>\n          {getFieldDecorator('city', {\n            rules: [\n              {\n                required: true,\n                message: 'Введите название города',\n              },\n            ],\n          })(\n            <UserRemoteSelect\n              placeholder=\"Город\"\n              options={['Москва', 'Питер']}\n              size=\"large\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"Укажите текущий пробег автомобиля\">\n          {getFieldDecorator('kilometrage')(\n            <Input\n              type=\"number\"\n              placeholder=\"Пробег\"\n              addonAfter=\"км\"\n              size=\"large\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"Выберите услуги, в которых нуждается автомобиль\">\n          <Row>\n            <CheckboxGroup\n              getFieldDecorator={getFieldDecorator}\n              name=\"services\"\n              options={[\n                'Регулярное ТО',\n                'Замена щёток стеклоочистителя',\n                'Долив масла',\n              ]}\n            />\n          </Row>\n          <Row>\n            {getFieldDecorator('otherServices')(\n              <TextArea\n                placeholder=\"Другие услуги\"\n                rows={4}\n                style={{ fontSize: '16px' }}\n              />\n            )}\n          </Row>\n        </Form.Item>\n        <Form.Item label=\"Выберите дату и время обслуживания/ремонта\">\n          <Row type=\"flex\" justify=\"space-between\">\n            <Form.Item>\n              {getFieldDecorator('date')(\n                <DatePicker\n                  size={'large'}\n                  placeholder=\"Выберите дату\"\n                  style={{ marginRight: '20px', marginBottom: '15px' }}\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator('dayHalf', {\n                initialValue: 'am',\n              })(\n                <Radio.Group buttonStyle=\"solid\" size=\"large\">\n                  <Radio.Button value=\"am\">До 14:00</Radio.Button>\n                  <Radio.Button value=\"pm\">После 14:00</Radio.Button>\n                </Radio.Group>\n              )}\n            </Form.Item>\n          </Row>\n        </Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" size=\"large\">\n          Отправить заявку\n        </Button>\n      </Form>\n    );\n  }\n}\nexport default Form.create({ name: 'request' })(NewRequestForm);\n","import React from 'react';\nimport { Typography } from 'antd';\nimport NewRequestForm from '../components/NewRequestForm';\n\nconst { Title } = Typography;\n\nconst New = () => {\n  return (\n    <div\n      style={{\n        background: '#fff',\n        padding: 24,\n        minHeight: 280,\n      }}\n    >\n      <Title>Новая заявка</Title>\n      <NewRequestForm />\n    </div>\n  );\n};\n\nexport default New;\n","import React from 'react';\nimport axios from 'axios';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './redux/reducer';\nimport Index from './pages/index';\nimport Header from './components/Header';\nimport New from './pages/new';\nimport './App.css';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { Layout, ConfigProvider } from 'antd';\nimport ruRU from 'antd/es/locale/ru_RU';\nimport moment from 'moment';\nimport 'moment/locale/ru';\n\nmoment.locale('ru');\n\nconst { Footer, Content } = Layout;\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nexport default function App() {\n  // Make a request for a user with a given ID\n  axios\n    .get('/get-cities')\n    .then(function(response) {\n      // handle success\n      console.log(response);\n    })\n    .catch(function(error) {\n      // handle error\n      console.log(error);\n    })\n    .finally(function() {\n      // always executed\n    });\n  return (\n    <ConfigProvider locale={ruRU}>\n      <Provider store={store}>\n        <Router>\n          <Layout className=\"layout\">\n            <Header />\n            <Content className=\"content\">\n              <Switch>\n                <Route path=\"/new\">\n                  <New />\n                </Route>\n                <Route path=\"/\" exact>\n                  <Index />\n                </Route>\n              </Switch>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>\n              Rosbank Tech.Madness ©2019 Created by Island Pilots\n            </Footer>\n          </Layout>\n        </Router>\n      </Provider>\n    </ConfigProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}